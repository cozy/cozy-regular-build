#!/usr/bin/env node

var corbu = require('../index')
path = require('path')

function exit( code ){
    setTimeout(function(){ process.exit(code) }, 100)
}

function findLocalCorbu(fromPath){
    var binLocation = path.join(fromPath, 'node_modules', '.bin', 'corbu')
    if(fromPath === '/'){
        return null
    }else if(fs.existsSync(binLocation)){
        return fromPath
    }else{
        return findLocalCorbu(path.dirname(fromPath));
    }
}

// handle options
var options = {
    dev: '--dev',
    debug: '--debug',
    sameLocales: '--same-locales',
    brunch: '--brunch'
}

corbu.hasOption = function(opt){
    return process.argv.indexOf(opt) > 0 ||
    process.argv.indexOf(options[opt]) > 0 ||
    (corbu.appServerPackage.corbu && (
    corbu.appServerPackage.corbu[opt] ||
    corbu.appServerPackage.corbu[options[opt]]))
}

for(var key in options) if(options.hasOwnProperty(key))
    corbu[key] = corbu.hasOption(key)


// handle command
var command = process.argv[2];
var aliases = {
    "build:client": "buildClient",
    "build:server": "buildServer",
    "travis-before": "travisBefore",
    "travis-after-success": "doPublish",
    "stop-ds":"stopDS"
};

if( aliases[command] )
    command = aliases[command]

// if corbu is not installed locally
var localCorbu = findLocalCorbu(process.cwd());
if(command != 'setup' && !process.env.npm_lifecycle_event && !localCorbu){
    if(!localCorbu)
        console.log('install corbu in your app\'s folder');
        return exit(1)

    var run = require('../utils/run');
    run({
        command: localCorbu,
        args: process.argv
    }, function( err ){
        if( err ){
            console.log(err.stack);
            exit(err.code || 1)
        } else {
            exit(0)
        }
    })

}else if( corbu[command] ){
    console.log('cozy-regular-build', command)
    corbu[command](function( err ){
        if( err ){
            console.log(err.stack);
            exit(err.code || 1)
        } else {
            console.log('DONE')
            exit(0)
        }
    });

}else{
    console.log("unknown command ", command)
    exit(1)
}

#!/usr/bin/env node

/**
utility binary which pass arguments and command from npm call to
another command.

Example :
{scripts: {"build": "use corbu", "prepublish":"use corbu"} }
npm run build --dev --->  corbu build --dev
npm run publish     --->  corbu prepublish

*/

if(!process.env.npm_config_argv)
    throw new Error('the use utility can only be used in npm scripts')

var npm_argv = JSON.parse(process.env.npm_config_argv).cooked;
var lifecycle_event = process.env.npm_lifecycle_event;
var user_agent = process.env.npm_config_user_agent;
var npm_version = user_agent.split(' ')[0].split('/')[1];
if( npm_argv[0] === 'run' ){
    var args = [lifecycle_event].concat(npm_argv.slice(2));
}else{
    var args = [lifecycle_event].concat(npm_argv.slice(1))
}

var command = process.argv[2]
args = args.concat(process.argv.slice(3))
require('child_process').spawn(command, args, {
    cwd: process.cwd(),
    env: process.env,
    stdio: 'inherit'
})
.on('exit', function(code){
    process.exit(code);
})
